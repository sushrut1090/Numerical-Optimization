clc;
clear all;
close all;
% square 
% f = @(x) x(1).^2 + x(2).^2;
% grad = @(x) [2*x(1); 2*x(2)] ;
% hess = @(x) [2 0; 0 2];
% x0 = [123;123];

% ex3
% f = @(x) 5*x(1)^4 + 6*x(2)^4 - 6*x(1)^2 + 2*x(1)*x(2) + 5*x(2)^2 +15*x(1) - 7*x(2) + 13;
% grad = @(x) [20*x(1)^3-12*x(1)+2*x(2)+15; 
%              24*x(2)^3+2*x(1)+10*x(2)-7];
% hess = @(x) [60*x(1).^2-12,2;
%             2,72*x(2)^2 +10];
% x0 = [0.1;0.1];

%ex 2
% f = @(x) x(1).^2 + 4*x(2).^2 + 2*x(1)*x(2);
% grad = @(x) [2*x(1) + 2*x(2);
%              8*x(2) + 2*x(1)];
% hess = @(x) [2 2;2 8];
% x0 = [3;3];

%rosenbruck
% f = @(x) 100*(x(2).^2-x(1).^2).^2 + (1-x(1)).^2;
% 
% grad = @(x)[-400*x(1)*(x(2).^2 -x(1).^2) - 2*(1 - x(1));
%             400*x(2)*(x(2).^2 - x(1).^2)];
% hess = @(x) -[400*(x(2).^2-3*x(1)^2)+2 800*x(1)*x(2);
%             800*x(1)*x(2) -400*(3*x(2)^2 -x(1)^2)];
% x0 = [1.2;1.2];
%x0 = [-1.2;1];

% ex1
% f = @(x) 100*(x(2)-x(1)).^2 + (1-x(1)).^2;
% grad = @(x) [202*x(1)-202*x(2)-2;
%             200*x(2)-200*x(1)];
% hess = @(x) [202 -202;
%            -200 200];
% x0 = [1.1;1.2];

% ex2
% f = @(x) x(1).^2 + 4*x(2).^2 + 2*x(1)*x(2);
% grad = @(x) [2*x(1)+2*x(2);
%               8*x(2) + 2*x(1)];
% x0 = [-3;-3];

% ex3
% f = @(x) (x(1)+2*x(2)-7).^2 + (2*x(1)+x(2)-5).^2;
% grad = @(x) [10*x(1)+8*x(2)-34;
%             8*x(1)+10*x(2)-38];
% x0 = [-9.5;9.5];

% ex4
% f = @(x) 5*x(1)^4 + 6*x(2)^4 - 6*x(1)^2 + 2*x(1)*x(2) + 5*x(2)^2 + 15*x(1) - 7*x(2) + 13;
% grad = @(x) [20*x(1)^3-12*x(1)+2*x(2)+15;
%              24*x(2)^3+2*x(1)+10*x(2)-7];
% x0 = [1.9;-1.9];

% ex5
% f = @(x) (x(1)^2)^(x(2)^2 +1) + (x(2)^2)^(x(1)^2 + 1);
% grad = @(x) [(2*x(1)^(2*x(2)^2 +1))*(x(2)^2 +1)+x(1)*log(x(2))*4*x(2)^(2*(x(1)^2 +1));
%             4*x(2)*log(x(1))*x(1)^(2*(x(2)^2+1))+2*(x(1)^2+1)*x(2)^(2*x(1)^2+1)];
% x0 = [-1.5;1.25];

% ex7
% f = @(x) x(1).^2 + x(2).^3 - (x(3).^4).^2 + (2*x(1)*x(2)*x(3)).^2 + (2*x(1)*x(2)-3*x(2)*x(3) +x(1)*x(3)).^2;
% grad = @(x) [2*x(1)+8*x(1)*(x(2)*x(3)).^2+2*(2*x(2)+x(3))*(2*x(1)*x(2)+x(1)*x(3)-3*x(2)*x(3));
%             3*x(2)^2+8*x(1)^2*x(2)*x(3)^2+2*(2*x(1)-3*x(3))*(2*x(1)*x(2)+x(1)*x(3)-3*x(2)*x(3))
%             -8*x(3)^7+8*(x(1)^2)*(x(2)^2)*x(3)+2*(x(1)-3*x(2))*(2*x(1)*x(2)+x(1)*x(3)-3*x(2)*x(3))];
% x0 = [0.10;0.10;0.10];

% new
% f = @(x) 100*( x(2)^2 - 2*x(2)*x(1) + x(1)^2) + (1 - 2*x(1) + x(1)^2);
% grad = @(x) [100*(-2*x(2)+2*x(1))-2+2*(x(1));
%              200*x(2)-200*x(1)];
% hess = @(x) [202 -200;
%             -200 200];
% x0 = [-1.8;-1.8];

assert(size(x0,2) ==1);
para = [1,0.1,0.99];
%x = x0; 
y = x0;
B = eye(size(x0,1));
for i = 1:2000
%[yy,alpha(i)] = SteepestDescentDirection(f,grad,y,para);
%[yy,alpha(i)] = NewtonDirection(f,grad,hess,y,para);
[B,yy,alpha(i)] = BFGS(f,grad,y,B);
if (norm(grad(yy)) < 1e-10)
    break;
end
y =yy;
end
plot(alpha)
title('Step size alpha over iterations')
xlabel('iteration')
ylabel('Step size')